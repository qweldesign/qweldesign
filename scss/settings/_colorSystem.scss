// Color System

// 配色を決定する

$grays:            (
  darkest:           #262626, // 15%
  darker:            #4d4d4d, // 30%
  dark:              #808080, // 50%
  light:             #b3b3b3, // 70%
  lighter:           #d9d9d9, // 85%
  lightest:          #ffffff, // 100%
) !default;

$colors:           (
  primary:           hsl(203, 71%, 60%), // oklch(70% 0.12 240)
  secondary:         hsl(32, 85%, 48%),  // oklch(70% 0.16 60)
  tertiary:          hsl(70, 100%, 34%)  // oklch(70% 0.18 120)
) !default;

$theme-colors:     map-merge($grays, $colors) !default;
$theme-accent:     "primary" !default;

// 配色の配列から色指定を抽出する関数
@function theme-color($key: $theme-accent) {
  @return var(--color--#{$key});
}

// bodyの設定
$body-bg:          theme-color("lightest") !default;
$body-color:       theme-color("darkest") !default;

// 背景色から適切な文字色を判定する関数 ($keyで指定)
// 参考(https://en.wikipedia.org/wiki/YIQ)
@function get-color-yiq($key) {
  $color: map-get($theme-colors, $key);
  $r: red($color);
  $g: green($color);
  $b: blue($color);
  $yiq: (($r * 299) + ($g * 587) + ($b * 114)) / 1000;
  @if ($yiq < 150) {
    @return true;
  } @else {
    @return false;
  }
}

// 背景色から適切な文字色を出力
@function color-yiq($key, $invert: false) {
  @if ($invert == false) {
    @if (get-color-yiq($key)) {
      @return $body-bg;
    } @else {
      @return $body-color;
    }
  } @else {
    // 反転した結果を出力 (後の color-active と共に使用)
    @if (get-color-yiq($key)) {
      @return $body-color;
    } @else {
      @return $body-bg;
    }
  }
}

// テーマカラーにアクセントを付ける
@function color-activate($key) {
  $color: map-get($theme-colors, $key);
  @if (get-color-yiq($key)) {
    @return lighten($color, 20%);
  } @else {
    @return darken($color, 20%);
  }
}

// アクセントを付けたテーマカラーを出力
@function color-active($key) {
  @return var(--color--#{$key}--active);
}

// リンク文字の設定
// リンクを強調するため、_typography.scssにて、文字の装飾も設定すること
$link-color:       theme-color("darker") !default;
$link-hover-color: theme-color($theme-accent) !default;
